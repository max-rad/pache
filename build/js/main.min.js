/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/modules/accordion/accordions.js":
/*!********************************************!*\
  !*** ./js/modules/accordion/accordions.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Accordions: function() { return /* binding */ Accordions; }
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Accordions = /*#__PURE__*/function () {
  function Accordions() {
    _classCallCheck(this, Accordions);
    this._openHeight = 0;
    this._windowWidth = window.innerWidth;
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._windowResizeHandler = this._windowResizeHandler.bind(this);
    this._init();
  }
  _createClass(Accordions, [{
    key: "_init",
    value: function _init() {
      this.fullUpdate();
      document.addEventListener('click', this._documentClickHandler);
      window.addEventListener('resize', this._windowResizeHandler);
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-accordion="button"]')) {
        return;
      }
      evt.preventDefault();
      var parent = target.closest('[data-accordion="parent"]');
      if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
        return;
      }
      var element = target.closest('[data-accordion="element"]');
      if (element.classList.contains('is-active')) {
        this.closeAccordion(element);
        return;
      }
      this.openAccordion(element);
    }
  }, {
    key: "_windowResizeHandler",
    value: function _windowResizeHandler() {
      if (this._windowWidth === window.innerWidth) {
        return;
      }
      this._windowWidth = window.innerWidth;
      this.updateAccordionsHeight();
    }
  }, {
    key: "closeAllAccordion",
    value: function closeAllAccordion(parent) {
      var _this = this;
      var elements = parent.querySelectorAll('[data-accordion="element"]');
      elements.forEach(function (element) {
        var currentParent = element.closest('[data-accordion="parent"]');
        if (currentParent === parent) {
          _this.closeAccordion(element);
        }
      });
    }
  }, {
    key: "updateAccordionsHeight",
    value: function updateAccordionsHeight() {
      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      if (element) {
        var content = element.querySelector('[data-accordion="content"]');
        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
        return;
      }
      var closeElements = document.querySelectorAll('[data-accordion="element"]:not(.is-active)');
      closeElements.forEach(function (closeElement) {
        var parent = closeElement.closest('[data-accordion="parent"]');
        var content = closeElement.querySelector('[data-accordion="content"]');
        if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
          content.style.maxHeight = '100%';
          return;
        }
        content.style.maxHeight = null;
      });
      var openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      openElements.forEach(function (openElement) {
        var content = openElement.querySelector('[data-accordion="content"]');
        var parent = openElement.closest('[data-accordion="parent"]');
        if (parent.dataset.destroy && !window.matchMedia(parent.dataset.destroy).matches) {
          content.style.maxHeight = '100%';
          return;
        }
        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
      });
    }
  }, {
    key: "fullUpdate",
    value: function fullUpdate() {
      var _this2 = this;
      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var openElements;
      if (parent) {
        openElements = parent.querySelectorAll('[data-accordion="element"].is-active');
      } else {
        openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      }
      openElements.forEach(function (openElement) {
        var innerParent = openElement.querySelector('[data-accordion="parent"]');
        if (innerParent) {
          return;
        }
        _this2.openAccordion(openElement, transition);
      });
      this.updateAccordionsHeight();
    }
  }, {
    key: "openAccordion",
    value: function openAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var parentElement = element.closest('[data-accordion="parent"]');
      var contentElement = element.querySelector('[data-accordion="content"]');
      this._openHeight += contentElement.scrollHeight;
      if (parentElement.hasAttribute('data-single')) {
        this.closeAllAccordion(parentElement);
      }
      element.classList.add('is-active');
      if (transition) {
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }
      if (parentElement.closest('[data-accordion="element"]')) {
        this.openAccordion(parentElement.closest('[data-accordion="element"]'), transition);
        return;
      }
      this._openHeight = 0;
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var contentElement = element.querySelector('[data-accordion="content"]');
      if (!contentElement) {
        return;
      }
      element.classList.remove('is-active');
      if (transition) {
        contentElement.style.maxHeight = '0';
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = '0';
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }
    }
  }]);
  return Accordions;
}();

/***/ }),

/***/ "./js/modules/accordion/init-accordions.js":
/*!*************************************************!*\
  !*** ./js/modules/accordion/init-accordions.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   accordions: function() { return /* binding */ accordions; },
/* harmony export */   initAccordions: function() { return /* binding */ initAccordions; }
/* harmony export */ });
/* harmony import */ var _accordions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accordions */ "./js/modules/accordion/accordions.js");

var accordions;
var initAccordions = function initAccordions() {
  accordions = new _accordions__WEBPACK_IMPORTED_MODULE_0__.Accordions();
  // Используйте в разработке экспортируемую переменную accordions, window сделан для бэкэнда
  window.accordions = accordions;
};


/***/ }),

/***/ "./js/modules/init-card-slider.js":
/*!****************************************!*\
  !*** ./js/modules/init-card-slider.js ***!
  \****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initCardSlider: function() { return /* binding */ initCardSlider; }
/* harmony export */ });
var slider = document.querySelector('[data-swiper="card"]');
var breakpointMedia = window.matchMedia('(max-width: 767px)');
var swiper;
var breakpointChecker = function breakpointChecker() {
  if (breakpointMedia.matches) {
    initSwiper();
  } else {
    if (swiper) {
      swiper.destroy();
    }
  }
  breakpointMedia.addListener(breakpointChecker);
};
var initSwiper = function initSwiper() {
  swiper = new Swiper(slider, {
    slidesPerView: 1,
    pagination: {
      el: '.swiper-pagination',
      clickable: true,
      hiddenClass: '.swiper-pagination-hidden'
    }
  });
};
var initCardSlider = function initCardSlider() {
  if (!slider) {
    return;
  }
  breakpointChecker();
};


/***/ }),

/***/ "./js/modules/init-catalog-card-slider.js":
/*!************************************************!*\
  !*** ./js/modules/init-catalog-card-slider.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initCatalogCardSlider: function() { return /* binding */ initCatalogCardSlider; }
/* harmony export */ });
var initCatalogCardSlider = function initCatalogCardSlider() {
  var sliders = document.querySelectorAll('[data-swiper="catalog-card"]');
  if (!sliders.length) {
    return;
  }
  sliders.forEach(function (slider, index) {
    var buttonNext = slider.querySelector('[data-button-next="catalog-card"]');
    var buttonPrev = slider.querySelector('[data-button-prev="catalog-card"]');
    var swiper = new Swiper(slider, {
      slidesPerView: 1,
      spaceBetween: 10,
      navigation: {
        nextEl: buttonNext,
        prevEl: buttonPrev,
        hiddenClass: '.swiper-button-hidden'
      }
    });
  });
};


/***/ }),

/***/ "./js/modules/init-complete-look-slider.js":
/*!*************************************************!*\
  !*** ./js/modules/init-complete-look-slider.js ***!
  \*************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initCompleteLookSlider: function() { return /* binding */ initCompleteLookSlider; }
/* harmony export */ });
/* harmony import */ var _utils_element_size_observer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/element-size-observer */ "./js/utils/element-size-observer.js");

var initCompleteLookSlider = function initCompleteLookSlider() {
  var sliders = document.querySelectorAll('[data-swiper="complete-look"]');
  if (!sliders.length) {
    return;
  }
  sliders.forEach(function (slider) {
    (0,_utils_element_size_observer__WEBPACK_IMPORTED_MODULE_0__.initElementSizeObserver)(slider);
    var swiper = new Swiper(slider, {
      slidesPerView: 2,
      spaceBetween: 20,
      pagination: {
        el: '.swiper-pagination',
        clickable: true,
        hiddenClass: '.swiper-pagination-hidden'
      },
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
        hiddenClass: '.swiper-button-hidden'
      },
      breakpoints: {
        320: {
          slidesPerView: 1,
          spaceBetween: 20
        },
        620: {
          slidesPerView: 2,
          spaceBetween: 20
        }
      }
    });
  });
};


/***/ }),

/***/ "./js/modules/init-goods-slider.js":
/*!*****************************************!*\
  !*** ./js/modules/init-goods-slider.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initGoodsSlider: function() { return /* binding */ initGoodsSlider; }
/* harmony export */ });
/* harmony import */ var _utils_element_size_observer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/element-size-observer */ "./js/utils/element-size-observer.js");

var initGoodsSlider = function initGoodsSlider() {
  var sliders = document.querySelectorAll('[data-swiper="goods"]');
  if (!sliders.length) {
    return;
  }
  sliders.forEach(function (slider) {
    (0,_utils_element_size_observer__WEBPACK_IMPORTED_MODULE_0__.initElementSizeObserver)(slider);
    var buttonNext = slider.querySelector('[data-button-next="goods"]');
    var buttonPrev = slider.querySelector('[data-button-prev="goods"]');
    var swiper = new Swiper(slider, {
      slidesPerView: 3,
      spaceBetween: 64,
      pagination: {
        el: '.swiper-pagination',
        clickable: true,
        hiddenClass: '.swiper-pagination-hidden'
      },
      navigation: {
        nextEl: buttonNext,
        prevEl: buttonPrev,
        hiddenClass: '.swiper-button-hidden'
      },
      breakpoints: {
        320: {
          slidesPerView: 1,
          spaceBetween: 20
        },
        620: {
          slidesPerView: 2,
          spaceBetween: 20
        },
        1024: {
          slidesPerView: 3,
          spaceBetween: 30
        },
        1440: {
          slidesPerView: 3,
          spaceBetween: 45
        },
        1600: {
          slidesPerView: 3,
          spaceBetween: 64
        }
      }
    });
  });
};


/***/ }),

/***/ "./js/modules/init-header-accordion.js":
/*!*********************************************!*\
  !*** ./js/modules/init-header-accordion.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initHeaderAccordion: function() { return /* binding */ initHeaderAccordion; }
/* harmony export */ });
var breakpointMedia = window.matchMedia('(min-width: 1200px)');
var list = document.querySelector('[data-nav="list"]');
var links = document.querySelectorAll('[data-nav="link"]');
var breakpointChecker = function breakpointChecker() {
  if (breakpointMedia.matches) {
    document.removeEventListener('click', documentHandler);
    links.forEach(function (link) {
      if (link.classList.contains('is-active')) {
        link.classList.remove('is-active');
      }
    });
  } else {
    document.addEventListener('click', documentHandler);
  }
  breakpointMedia.addListener(breakpointChecker);
};
var documentHandler = function documentHandler(evt) {
  var target = evt.target;
  if (!target.closest('[data-nav="item"]')) {
    return;
  }
  var item = target.closest('[data-nav="item"]');
  if (!target.closest('[data-nav="link"]')) {
    return;
  }
  var link = item.querySelector('[data-nav="link"]');
  var dropdown = item.querySelector('[data-nav="dropdown"]');
  if (link.classList.contains('is-active')) {
    link.classList.remove('is-active');
    dropdown.style.maxHeight = 0;
  } else {
    link.classList.add('is-active');
    dropdown.style.maxHeight = dropdown.scrollHeight + 'px';
  }
};
var initHeaderAccordion = function initHeaderAccordion() {
  if (!list) {
    return;
  }
  document.addEventListener('click', documentHandler);
  window.addEventListener('resize', function (evt) {
    var items = document.querySelectorAll('[data-nav="item"]');
    items.forEach(function (item) {
      var link = item.querySelector('[data-nav="link"]');
      var dropdown = item.querySelector('[data-nav="dropdown"]');
      if (link.classList.contains('is-active')) {
        dropdown.style.maxHeight = scrollHeight + 'px';
      }
    });
  });
  breakpointChecker();
};


/***/ }),

/***/ "./js/modules/init-header-menu.js":
/*!****************************************!*\
  !*** ./js/modules/init-header-menu.js ***!
  \****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initHeaderMenu: function() { return /* binding */ initHeaderMenu; }
/* harmony export */ });
/* harmony import */ var _utils_scroll_lock_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/scroll-lock.js */ "./js/utils/scroll-lock.js");

var scrollLock = new _utils_scroll_lock_js__WEBPACK_IMPORTED_MODULE_0__.ScrollLock();
var menu = document.querySelector('[data-menu]');
var menuToggle = document.querySelector('[data-menu-toggle]');
var breakpointMedia = window.matchMedia('(min-width: 1200px)');
var openMenu = function openMenu() {
  menu.classList.add('is-active');
  scrollLock.disableScrolling();
};
var closeMenu = function closeMenu() {
  menu.classList.remove('is-active');
  scrollLock.enableScrolling();
};
var breakpointChecker = function breakpointChecker() {
  if (breakpointMedia.matches) {
    if (menu.classList.contains('is-active')) {
      closeMenu();
    }
  }
  breakpointMedia.addListener(breakpointChecker);
};
var initHeaderMenu = function initHeaderMenu() {
  if (!menu) {
    return;
  }
  if (menuToggle) {
    menuToggle.addEventListener('click', function (evt) {
      evt.preventDefault();
      if (menu.classList.contains('is-active')) {
        closeMenu();
      } else {
        openMenu();
      }
    });
  }
  breakpointChecker();
};


/***/ }),

/***/ "./js/modules/init-intro-slider.js":
/*!*****************************************!*\
  !*** ./js/modules/init-intro-slider.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initIntroSlider: function() { return /* binding */ initIntroSlider; }
/* harmony export */ });
var initIntroSlider = function initIntroSlider() {
  var slider = document.querySelector('[data-swiper="intro"]');
  if (!slider) {
    return;
  }
  var swiper = new Swiper(slider, {
    slidesPerView: 1,
    loop: true,
    pagination: {
      el: '.swiper-pagination',
      clickable: true,
      hiddenClass: '.swiper-pagination-hidden'
    }
  });
};


/***/ }),

/***/ "./js/modules/init-map-slider.js":
/*!***************************************!*\
  !*** ./js/modules/init-map-slider.js ***!
  \***************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initMapSlider: function() { return /* binding */ initMapSlider; }
/* harmony export */ });
var initMapSlider = function initMapSlider() {
  var slider = document.querySelector('[data-swiper="map"]');
  if (!slider) {
    return;
  }
  var swiper = new Swiper(slider, {
    slidesPerView: 'auto',
    allowTouchMove: false
  });
  var list = document.querySelector('[data-map-list]');
  if (!list) {
    return;
  }
  var items = list.querySelectorAll('[data-map-item]');
  var map = document.querySelector('[data-map]');
  initItems(items);
  var currentActiveIndex = items[0].dataset.index;
  document.addEventListener('click', function (evt) {
    var target = evt.target;
    if (!target.closest('[data-map-item]')) {
      return;
    }
    evt.preventDefault();
    var item = target.closest('[data-map-item]');
    if (item.classList.contains('is-active')) {
      return;
    }
    var itemIndex = item.dataset.index;
    if (swiper) {
      swiper.slideTo(itemIndex);
      item.classList.add('is-active');
      items[currentActiveIndex].classList.remove('is-active');
      currentActiveIndex = itemIndex;
      if (window.innerWidth < 767) {
        map.scrollIntoView({
          behavior: 'smooth'
        });
      }
    }
  });
};
var initItems = function initItems(items) {
  items.forEach(function (item, index) {
    if (item.classList.contains('is-active')) {
      item.classList.remove('is-active');
    }
    item.setAttribute('data-index', index);
  });
  items[0].classList.add('is-active');
};


/***/ }),

/***/ "./js/modules/init-quantity-counter.js":
/*!*********************************************!*\
  !*** ./js/modules/init-quantity-counter.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initQuantityCounter: function() { return /* binding */ initQuantityCounter; }
/* harmony export */ });
var initQuantityCounter = function initQuantityCounter() {
  var counters = document.querySelectorAll('[data-counter]');
  if (!counters) {
    return;
  }
  document.addEventListener('click', function (evt) {
    var target = evt.target;
    if (!target.closest('[data-counter]')) {
      return;
    }
    var counter = target.closest('[data-counter]');
    var buttonMinus = counter.querySelector('[data-counter-minus]');
    var buttonPlus = counter.querySelector('[data-counter-plus]');
    var amount = counter.querySelector('[data-counter-amount]');
    if (target.closest('[data-counter-minus]')) {
      if (Number(amount.innerHTML) <= 1) {
        return;
      }
      amount.innerHTML = Number(amount.innerHTML) - 1;
    }
    if (target.closest('[data-counter-plus]')) {
      if (Number(amount.innerHTML) > 99) {
        return;
      }
      amount.innerHTML = Number(amount.innerHTML) + 1;
    }
  });
};


/***/ }),

/***/ "./js/modules/init-show-more.js":
/*!**************************************!*\
  !*** ./js/modules/init-show-more.js ***!
  \**************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initShowMore: function() { return /* binding */ initShowMore; }
/* harmony export */ });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var initShowMore = function initShowMore() {
  var showMore = document.querySelectorAll('[data-show-more]');
  if (!showMore.length) {
    return;
  }
  var config = {
    attributes: true,
    attributeFilter: ['style'],
    subtree: true
  };
  showMore.forEach(function (element) {
    var items = element.querySelectorAll('li:not([style="display: none;"])');
    var icon = element.querySelector('[data-show-more-button]');
    if (items.length <= 6) {
      icon.style.display = 'none';
    }
    var callback = function callback(mutationList, observer) {
      var _iterator = _createForOfIteratorHelper(mutationList),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var mutation = _step.value;
          if (mutation.type === 'attributes' && window.innerWidth < 1023) {
            var _items = element.querySelectorAll('li:not([style="display: none;"])');
            var _icon = element.querySelector('[data-show-more-button]');
            if (_items.length <= 6) {
              _icon.style.display = 'none';
            } else {
              _icon.style.display = 'block';
            }
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    };
    var observer = new MutationObserver(callback);
    observer.observe(element.querySelector('ul'), config);
  });
  document.addEventListener('click', function (evt) {
    var target = evt.target;
    if (!target.closest('[data-show-more-button]')) {
      return;
    }
    var button = target.closest('[data-show-more-button]').dataset.showMoreButton;
    var list = target.closest("[data-show-more=\"".concat(button, "\"]"));
    list.classList.toggle('is-active');
  });
};


/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initModals: function() { return /* binding */ initModals; },
/* harmony export */   modals: function() { return /* binding */ modals; }
/* harmony export */ });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");

var modals;

// Здесь реализован пример открытия модалки через колбэк закрытия
// const openModalInCloseCallback = (name, context = this) => {
//   context._enableScrolling = false;
//   context._setSettings('default');
//   modals.open(name);
// };

// closeCallback() {
//   openModalInCloseCallback('modal-5');
// },

var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};
var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');
  if (modalElements.length) {
    modalElements.forEach(function (el) {
      setTimeout(function () {
        el.classList.remove('modal--preload');
      }, 100);
    });
  }
  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__.Modals(settings);
  // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда
  window.modals = modals;
};


/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Modals: function() { return /* binding */ Modals; }
/* harmony export */ });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    _classCallCheck(this, Modals);
    this._scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__.ScrollLock();
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__.FocusLock();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._stackModalElements = [];
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._resetScrollPos = this._settings[this._settingKey].resetScrollPos;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);
    this._init();
  }
  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;
      if (!this._settings[settingKey]) {
        return;
      }
      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._resetScrollPos = typeof this._settings[settingKey].resetScrollPos === 'boolean' ? this._settings[settingKey].resetScrollPos : this._settings[this._settingKey].resetScrollPos;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-open-modal]')) {
        return;
      }
      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;
      if (!this._modalName) {
        return;
      }
      this.open();
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';
      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-close-modal]')) {
        return;
      }
      if (target.closest('[data-close-modal="back"]')) {
        this.back();
      } else {
        this.close(target.closest('[data-modal]').dataset.modal);
        this._stackModalElements = [];
      }
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_stopInteractive",
    value: function _stopInteractive(modal) {
      if (this._stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "_autoPlay",
    value: function _autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');
        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      if (!modal || modal.classList.contains('is-active')) {
        return;
      }
      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');
      if (this._openedModalElement) {
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }
      this._setSettings(modalName);
      modal.classList.add('is-active');
      if (modalName !== this._stackModalElements[this._stackModalElements.length - 1]) {
        this._stackModalElements.push(modalName);
      }
      if (!this._openedModalElement) {
        this._scrollLock.disableScrolling();
      }
      if (this._openCallback) {
        this._openCallback();
      }
      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }
      if (this._resetScrollPos) {
        modal.scrollTo(0, 0);
      }
      setTimeout(function () {
        _this._addListeners(modal);
        _this._autoPlay(modal);
        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "back",
    value: function back() {
      if (!this._stackModalElements.length) {
        return;
      }
      var activeModal = this._stackModalElements[this._stackModalElements.length - 1];
      var prevModal = this._stackModalElements[this._stackModalElements.length - 2];
      if (this._stackModalElements.length === 1) {
        this._stackModalElements = [];
      }
      if (prevModal) {
        this._stackModalElements.pop();
        this.open(prevModal);
      }
      this.close(activeModal);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);
      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }
      if (this._lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }
      modal.classList.remove('is-active');
      this._removeListeners(modal);
      this._stopInteractive(modal);
      if (this._closeCallback) {
        this._closeCallback();
      }
      if (this._enableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enableScrolling();
        }, this._eventTimeout);
      }
      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);
      this._setSettings('default');
      this._enableScrolling = true;
    }
  }]);
  return Modals;
}();

/***/ }),

/***/ "./js/modules/tabs/init-tabs.js":
/*!**************************************!*\
  !*** ./js/modules/tabs/init-tabs.js ***!
  \**************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initTabs: function() { return /* binding */ initTabs; },
/* harmony export */   tabs: function() { return /* binding */ tabs; }
/* harmony export */ });
/* harmony import */ var _tabs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs */ "./js/modules/tabs/tabs.js");

var tabs;
var initTabs = function initTabs() {
  tabs = new _tabs__WEBPACK_IMPORTED_MODULE_0__.Tabs();
};


/***/ }),

/***/ "./js/modules/tabs/tabs.js":
/*!*********************************!*\
  !*** ./js/modules/tabs/tabs.js ***!
  \*********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Tabs: function() { return /* binding */ Tabs; }
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Tabs = /*#__PURE__*/function () {
  function Tabs() {
    _classCallCheck(this, Tabs);
    this._windowWidth = window.innerWidth;
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._init();
  }
  _createClass(Tabs, [{
    key: "_init",
    value: function _init() {
      this._initAllTabs();
      document.addEventListener('click', this._documentClickHandler);
    }
  }, {
    key: "_resizeObserver",
    value: function _resizeObserver() {
      var _this = this;
      return new ResizeObserver(function (entries) {
        var _iterator = _createForOfIteratorHelper(entries),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var entry = _step.value;
            if (entry.target.classList.contains('is-active')) {
              _this._updateTabHeight();
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      });
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-tabs="control"]')) {
        return;
      }
      evt.preventDefault();
      var control = target.closest('[data-tabs="control"]');
      this.openTab(control);
    }
  }, {
    key: "_initAllTabs",
    value: function _initAllTabs() {
      var _this2 = this;
      var tabs = document.querySelectorAll('[data-tabs="parent"]');
      var forLoadTabs = document.querySelectorAll('[data-tabs="element"].for-load');
      tabs.forEach(function (tab) {
        _this2._initTab(tab);
      });
      forLoadTabs.forEach(function (tab) {
        tab.classList.remove('for-load');
      });
    }
  }, {
    key: "_removeAllActiveClasses",
    value: function _removeAllActiveClasses(tabControlElements, tabElements) {
      tabElements.forEach(function (tab) {
        tab.classList.remove('is-active');
      });
      tabControlElements.forEach(function (element, index) {
        element.classList.remove('is-active');
        element.setAttribute('data-index', index);
      });
    }
  }, {
    key: "_setTabStartState",
    value: function _setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay) {
      var activeIndex = this._returnActiveIndex(tabControlElements);
      var blockHeight = dataHeight === 'max' ? this._returnMaxHeight(tabElements) : tabElements[activeIndex].offsetHeight;
      this._removeAllActiveClasses(tabControlElements, tabElements);
      tab.classList.add('no-transition');
      tabControlElements[activeIndex].classList.add('is-active');
      tabElements[activeIndex].classList.add('is-active');
      if (dataHeight !== 'unset') {
        tabContentElement.style.height = "".concat(blockHeight, "px");
      }
      setTimeout(function () {
        if (dataDelay) {
          tab.classList.remove('no-transition');
        }
      }, dataDelay);
    }
  }, {
    key: "_returnActiveIndex",
    value: function _returnActiveIndex(tabControlElements) {
      var activeIndex = 0;
      var flag = true;
      tabControlElements.forEach(function (control, index) {
        if (control.classList.contains('is-active') && flag) {
          activeIndex = index;
          flag = false;
        }
      });
      return activeIndex;
    }
  }, {
    key: "_returnMaxHeight",
    value: function _returnMaxHeight(tabElements) {
      var height = [];
      tabElements.forEach(function (element) {
        height.push(element.offsetHeight);
      });
      height.sort(function (a, b) {
        return a - b;
      });
      return height[height.length - 1];
    }
  }, {
    key: "_returnScopeList",
    value: function _returnScopeList(nodeList, parent) {
      var array = [];
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');
        if (elementParent === parent) {
          array.push(element);
        }
      });
      return array;
    }
  }, {
    key: "_returnScopeChild",
    value: function _returnScopeChild(nodeList, parent) {
      var currentChild;
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');
        if (elementParent === parent) {
          currentChild = element;
        }
      });
      return currentChild;
    }
  }, {
    key: "_updateTabHeight",
    value: function _updateTabHeight() {
      var _this3 = this;
      var activeElements = document.querySelectorAll('[data-tabs="element"].is-active');
      activeElements.forEach(function (element) {
        var transition = false;
        var parent = element.closest('[data-tabs="parent"]');
        if (parent.closest('[data-tabs="element"]')) {
          transition = true;
        }
        _this3._setTabElementHeight(element, transition);
      });
    }
  }, {
    key: "_setTabElementHeight",
    value: function _setTabElementHeight(element, transition) {
      var parentElement = element.closest('[data-tabs="parent"]');
      var dataHeight = parentElement.dataset.height;
      var contentElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="content"]'), parentElement);
      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);
      if (!transition) {
        parentElement.classList.add('no-transition');
      }
      if (dataHeight === 'max') {
        contentElement.style.height = "".concat(this._returnMaxHeight(tabElements), "px");
      } else if (dataHeight === 'unset') {
        contentElement.style.height = null;
      } else {
        contentElement.style.height = "".concat(this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement).offsetHeight, "px");
      }
      setTimeout(function () {
        return parentElement.classList.remove('no-transition');
      });
    }
  }, {
    key: "_initTab",
    value: function _initTab(tab) {
      var _this4 = this;
      var dataHeight = tab.dataset.height;
      var dataDelay = tab.dataset.delay ? tab.dataset.delay : 0;
      var tabContentElement = tab.querySelector('[data-tabs="content"]');
      var tabControlElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="control"]'), tab);
      var tabElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="element"]'), tab);
      this._setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay);
      if (dataHeight !== 'unset') {
        tabElements.forEach(function (element) {
          _this4._resizeObserver().observe(element);
        });
      }
      setTimeout(function () {
        tab.classList.remove('no-transition-global');
      });
    }
  }, {
    key: "reInit",
    value: function reInit() {
      this._initAllTabs();
    }
  }, {
    key: "openTab",
    value: function openTab(control) {
      var currentIndex = control.dataset.index;
      var parentElement = control.closest('[data-tabs="parent"]');
      if (control.classList.contains('is-active') || parentElement.classList.contains('no-action')) {
        return;
      }
      var dataDelay = parentElement.dataset.delay ? parentElement.dataset.delay : 0;
      var dataHeight = parentElement.dataset.height;
      var contentElement = parentElement.querySelector('[data-tabs="content"]');
      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);
      var activeControl = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="control"].is-active'), parentElement);
      var activeElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement);
      var currentHeight = contentElement.offsetHeight;
      var newHeight = tabElements[currentIndex].offsetHeight;
      parentElement.classList.add('no-action');
      document.activeElement.blur();
      if (activeControl) {
        activeControl.classList.remove('is-active');
      }
      if (activeElement) {
        activeElement.classList.remove('is-active');
      }
      if (currentHeight > newHeight) {
        setTimeout(function () {
          if (dataHeight !== 'max' && dataHeight !== 'unset') {
            contentElement.style.height = newHeight + 'px';
          }
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      } else {
        if (dataHeight !== 'max' && dataHeight !== 'unset') {
          contentElement.style.height = newHeight + 'px';
        }
        setTimeout(function () {
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          parentElement.classList.remove('no-action');
        }, dataDelay);
      }
    }
  }]);
  return Tabs;
}();

/***/ }),

/***/ "./js/utils/element-size-observer.js":
/*!*******************************************!*\
  !*** ./js/utils/element-size-observer.js ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initElementSizeObserver: function() { return /* binding */ initElementSizeObserver; }
/* harmony export */ });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var initElementSizeObserver = function initElementSizeObserver(slider) {
  var elements = slider.querySelectorAll('[data-element-size]');
  if (!elements.length) {
    return;
  }
  var resizeObserver = new ResizeObserver(function (entries) {
    var _iterator = _createForOfIteratorHelper(entries),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var entry = _step.value;
        if (entry.contentBoxSize) {
          var elementHeight = (slider.offsetHeight - entry.target.offsetHeight) / 2 + 'px';
          slider.querySelector('.swiper-button-next').style.top = "calc(50% - ".concat(elementHeight, ")");
          slider.querySelector('.swiper-button-prev').style.top = "calc(50% - ".concat(elementHeight, ")");
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  });
  elements.forEach(function (element) {
    resizeObserver.observe(element);
  });
};


/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FocusLock: function() { return /* binding */ FocusLock; }
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);
    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }
  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;
      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }
        if (this._focusableElements.length === 1) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
      }
      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();
        this._focusableElements[0].focus();
      }
      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();
        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);
      if (!lockedElement) {
        return;
      }
      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;
      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];
      if (this._endElement) {
        this._endElement.blur();
      }
      if (startElement && startFocus) {
        startElement.focus();
      }
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }
      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);
  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   iosChecker: function() { return /* binding */ iosChecker; }
/* harmony export */ });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ScrollLock: function() { return /* binding */ ScrollLock; }
/* harmony export */ });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);
    this._iosChecker = _ios_checker__WEBPACK_IMPORTED_MODULE_0__.iosChecker;
    this._lockClass = this._iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this._scrollTop = null;
    this._fixedBlockElements = document.querySelectorAll('[data-fix-block]');
  }
  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;
      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();
      if (this._getScrollbarWidth()) {
        document.body.style.paddingRight = "".concat(this._getScrollbarWidth(), "px");
        this._fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this._getScrollbarWidth(), "px");
        });
      }
      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.body.classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll);
      document.body.style.paddingRight = null;
      document.body.style.top = null;
      this._fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });
      document.body.removeAttribute('data-scroll');
      this._scrollTop = null;
    }
  }]);
  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
!function() {
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_init_header_menu_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/init-header-menu.js */ "./js/modules/init-header-menu.js");
/* harmony import */ var _modules_init_intro_slider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/init-intro-slider.js */ "./js/modules/init-intro-slider.js");
/* harmony import */ var _modules_init_goods_slider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/init-goods-slider.js */ "./js/modules/init-goods-slider.js");
/* harmony import */ var _modules_init_header_accordion_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/init-header-accordion.js */ "./js/modules/init-header-accordion.js");
/* harmony import */ var _modules_init_card_slider_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/init-card-slider.js */ "./js/modules/init-card-slider.js");
/* harmony import */ var _modules_init_show_more_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/init-show-more.js */ "./js/modules/init-show-more.js");
/* harmony import */ var _modules_tabs_init_tabs_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/tabs/init-tabs.js */ "./js/modules/tabs/init-tabs.js");
/* harmony import */ var _modules_modals_init_modals_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/modals/init-modals.js */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_init_map_slider_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/init-map-slider.js */ "./js/modules/init-map-slider.js");
/* harmony import */ var _modules_init_complete_look_slider_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/init-complete-look-slider.js */ "./js/modules/init-complete-look-slider.js");
/* harmony import */ var _modules_init_quantity_counter_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/init-quantity-counter.js */ "./js/modules/init-quantity-counter.js");
/* harmony import */ var _modules_init_catalog_card_slider_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/init-catalog-card-slider.js */ "./js/modules/init-catalog-card-slider.js");
/* harmony import */ var _modules_accordion_init_accordions_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/accordion/init-accordions.js */ "./js/modules/accordion/init-accordions.js");













window.addEventListener('DOMContentLoaded', function () {
  window.addEventListener('load', function () {
    (0,_modules_init_header_menu_js__WEBPACK_IMPORTED_MODULE_0__.initHeaderMenu)();
    (0,_modules_init_header_accordion_js__WEBPACK_IMPORTED_MODULE_3__.initHeaderAccordion)();
    (0,_modules_init_intro_slider_js__WEBPACK_IMPORTED_MODULE_1__.initIntroSlider)();
    (0,_modules_init_goods_slider_js__WEBPACK_IMPORTED_MODULE_2__.initGoodsSlider)();
    (0,_modules_init_card_slider_js__WEBPACK_IMPORTED_MODULE_4__.initCardSlider)();
    (0,_modules_init_show_more_js__WEBPACK_IMPORTED_MODULE_5__.initShowMore)();
    (0,_modules_tabs_init_tabs_js__WEBPACK_IMPORTED_MODULE_6__.initTabs)();
    (0,_modules_modals_init_modals_js__WEBPACK_IMPORTED_MODULE_7__.initModals)();
    (0,_modules_init_map_slider_js__WEBPACK_IMPORTED_MODULE_8__.initMapSlider)();
    (0,_modules_init_complete_look_slider_js__WEBPACK_IMPORTED_MODULE_9__.initCompleteLookSlider)();
    (0,_modules_init_quantity_counter_js__WEBPACK_IMPORTED_MODULE_10__.initQuantityCounter)();
    (0,_modules_init_catalog_card_slider_js__WEBPACK_IMPORTED_MODULE_11__.initCatalogCardSlider)();
    (0,_modules_accordion_init_accordions_js__WEBPACK_IMPORTED_MODULE_12__.initAccordions)();
  });
});
}();
/******/ })()
;
//# sourceMappingURL=main.min.js.map